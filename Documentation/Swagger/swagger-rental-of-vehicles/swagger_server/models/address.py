# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Address(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cep: str=None, state: str=None, city: str=None, district: str=None, street: str=None, number: str=None):  # noqa: E501
        """Address - a model defined in Swagger

        :param cep: The cep of this Address.  # noqa: E501
        :type cep: str
        :param state: The state of this Address.  # noqa: E501
        :type state: str
        :param city: The city of this Address.  # noqa: E501
        :type city: str
        :param district: The district of this Address.  # noqa: E501
        :type district: str
        :param street: The street of this Address.  # noqa: E501
        :type street: str
        :param number: The number of this Address.  # noqa: E501
        :type number: str
        """
        self.swagger_types = {
            'cep': str,
            'state': str,
            'city': str,
            'district': str,
            'street': str,
            'number': str
        }

        self.attribute_map = {
            'cep': 'cep',
            'state': 'state',
            'city': 'city',
            'district': 'district',
            'street': 'street',
            'number': 'number'
        }
        self._cep = cep
        self._state = state
        self._city = city
        self._district = district
        self._street = street
        self._number = number

    @classmethod
    def from_dict(cls, dikt) -> 'Address':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Address of this Address.  # noqa: E501
        :rtype: Address
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cep(self) -> str:
        """Gets the cep of this Address.


        :return: The cep of this Address.
        :rtype: str
        """
        return self._cep

    @cep.setter
    def cep(self, cep: str):
        """Sets the cep of this Address.


        :param cep: The cep of this Address.
        :type cep: str
        """

        self._cep = cep

    @property
    def state(self) -> str:
        """Gets the state of this Address.


        :return: The state of this Address.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state: str):
        """Sets the state of this Address.


        :param state: The state of this Address.
        :type state: str
        """

        self._state = state

    @property
    def city(self) -> str:
        """Gets the city of this Address.


        :return: The city of this Address.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city: str):
        """Sets the city of this Address.


        :param city: The city of this Address.
        :type city: str
        """

        self._city = city

    @property
    def district(self) -> str:
        """Gets the district of this Address.


        :return: The district of this Address.
        :rtype: str
        """
        return self._district

    @district.setter
    def district(self, district: str):
        """Sets the district of this Address.


        :param district: The district of this Address.
        :type district: str
        """

        self._district = district

    @property
    def street(self) -> str:
        """Gets the street of this Address.


        :return: The street of this Address.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street: str):
        """Sets the street of this Address.


        :param street: The street of this Address.
        :type street: str
        """

        self._street = street

    @property
    def number(self) -> str:
        """Gets the number of this Address.


        :return: The number of this Address.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number: str):
        """Sets the number of this Address.


        :param number: The number of this Address.
        :type number: str
        """

        self._number = number
