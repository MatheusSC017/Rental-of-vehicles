# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Classification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: str=None, daily_cost: float=None):  # noqa: E501
        """Classification - a model defined in Swagger

        :param title: The title of this Classification.  # noqa: E501
        :type title: str
        :param daily_cost: The daily_cost of this Classification.  # noqa: E501
        :type daily_cost: float
        """
        self.swagger_types = {
            'title': str,
            'daily_cost': float
        }

        self.attribute_map = {
            'title': 'title',
            'daily_cost': 'daily_cost'
        }
        self._title = title
        self._daily_cost = daily_cost

    @classmethod
    def from_dict(cls, dikt) -> 'Classification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Classification of this Classification.  # noqa: E501
        :rtype: Classification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this Classification.


        :return: The title of this Classification.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Classification.


        :param title: The title of this Classification.
        :type title: str
        """

        self._title = title

    @property
    def daily_cost(self) -> float:
        """Gets the daily_cost of this Classification.


        :return: The daily_cost of this Classification.
        :rtype: float
        """
        return self._daily_cost

    @daily_cost.setter
    def daily_cost(self, daily_cost: float):
        """Sets the daily_cost of this Classification.


        :param daily_cost: The daily_cost of this Classification.
        :type daily_cost: float
        """

        self._daily_cost = daily_cost
