version: '3.8'

services:
  distance-microservice:
    build: ./CoordinatesAPI
    networks:
      - rental
    command: flask --app address run --host 0.0.0.0
    ports:
      - "5000:5000"
    expose:
      - 5000
    env_file:
      - ./.env
  main-api:
    build: ./RentalAPI
    depends_on:
      - db
      - distance-microservice
    networks:
      - rental
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
      - ./.env
  db:
    image: mysql
    networks:
      - rental
    restart: unless-stopped
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_USER: rental_database_user
      MYSQL_PASSWORD: rental_database_password
      MYSQL_ROOT_PASSWORD: rental_root_database_password
      MYSQL_DATABASE: rental_database
      MYSQL_DATABASE_HOST: db
      MYSQL_DATABASE_PORT: 3306

networks:
  rental:
    driver: bridge

volumes:
  mysql_data:
